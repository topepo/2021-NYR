
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(tidymodels)
Registered S3 method overwritten by 'tune':
  method                   from   
  required_pkgs.model_spec parsnip
── Attaching packages ────────────────────────────────────── tidymodels 0.1.3 ──
✔ broom        0.7.9      ✔ recipes      0.1.16
✔ dials        0.0.9      ✔ rsample      0.1.0 
✔ dplyr        1.0.7      ✔ tibble       3.1.3 
✔ ggplot2      3.3.5      ✔ tidyr        1.1.3 
✔ infer        1.0.0      ✔ tune         0.1.6 
✔ modeldata    0.1.1      ✔ workflows    0.2.3 
✔ parsnip      0.1.7      ✔ workflowsets 0.1.0 
✔ purrr        0.3.4      ✔ yardstick    0.0.8 
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ purrr::discard() masks scales::discard()
✖ dplyr::filter()  masks stats::filter()
✖ dplyr::lag()     masks stats::lag()
✖ recipes::step()  masks stats::step()
• Use tidymodels_prefer() to resolve common conflicts.
> library(rules)

Attaching package: ‘rules’

The following object is masked from ‘package:dials’:

    max_rules

> library(lubridate)

Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

> library(timeDate)
> library(stringr)

Attaching package: ‘stringr’

The following object is masked from ‘package:recipes’:

    fixed

> library(doMC)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> registerDoMC(cores = 20)
> tidymodels_prefer()
> theme_set(theme_bw())
> 
> # ------------------------------------------------------------------------------
> 
> load("RData/chicago.RData")
> 
> # ------------------------------------------------------------------------------
> 
> stations <- names(chicago)
> stations <- stations[!(stations %in% c("ridership", "date"))]
> 
> chicago <- 
+   chicago %>% 
+   mutate(
+     change_1 = ifelse(date > ymd("2020-12-18"), 1, 0),  #  vac start
+     change_2 = ifelse(date > ymd("2021-01-08"), 1, 0),  #  2nd doses
+     change_3 = ifelse(date > ymd("2021-01-13"), 1, 0),  #  Hospitals and outpatient sites, 75 +
+     change_4 = ifelse(date > ymd("2021-01-25"), 1, 0),  #  phase 1b
+     change_5 = ifelse(date > ymd("2021-02-25"), 1, 0),  #  J&J available, phase 1B+
+     change_6 = ifelse(date > ymd("2021-04-10"), 1, 0)   #  approved for kids
+   )
> 
> 
> # ------------------------------------------------------------------------------
> 
> test_days <- ymd("2021-05-18") + days(0:13)
> 
> chi_train <- chicago %>% filter(date < min(test_days))
> chi_test  <- chicago %>% filter(date >= min(test_days))
> 
> min_rides <- min(chi_train$ridership)
> 
> chi_rs <-
+   chi_train %>%
+   sliding_period(
+     index = "date",  
+     period = "week",
+     lookback = 52 * 19.25,
+     assess_stop = 2,
+     step = 2
+   )
> 
> rs_dates <- 
+   chi_rs %>% 
+   mutate(date = map(splits, ~ min(assessment(.x)$date))) %>% 
+   select(id, date) %>% 
+   unnest(cols = date)
> 
> # ------------------------------------------------------------------------------
> 
> # define a few holidays
> us_hol <- 
+   listHolidays() %>% 
+   str_subset("(^US)|(Easter)")
> 
> cubist_recipe <- 
+   recipe(ridership ~ ., data = chi_train) %>% 
+   step_holiday(date, holidays = us_hol) %>% 
+   step_mutate(
+     day_after_thx   = ifelse(month(date) == 11 & day(date) == 26, 1, 0),
+     day_before_xmas = ifelse(month(date) == 12 & day(date) == 24, 1, 0),
+     day_after_xmas  = ifelse(month(date) == 12 & day(date) == 26, 1, 0),
+     new_years_eve    = ifelse(month(date) == 12 & day(date) == 30, 1, 0)
+   ) %>% 
+   step_date(date) %>% 
+   step_rm(date) %>% 
+   step_interact(~ all_of(stations):starts_with("change"))
> 
> glmnet_recipe <- 
+   cubist_recipe %>% 
+   step_dummy(all_nominal_predictors()) %>% 
+   step_zv(all_predictors()) %>% 
+   step_normalize(all_numeric_predictors())
> 
> # ------------------------------------------------------------------------------
> 
> cubist_spec <- 
+   cubist_rules(committees = tune(), neighbors = tune()) %>% 
+   set_engine("Cubist") 
> 
> cubist_workflow <- 
+   workflow() %>% 
+   add_recipe(cubist_recipe) %>% 
+   add_model(cubist_spec) 
> 
> cubist_grid <-
+   tidyr::crossing(committees = c(1:9, (1:5) * 10),
+                   neighbors = c(0, 3, 6, 9)) 
> cubist_tune <- 
+   tune_grid(cubist_workflow, resamples = chi_rs, grid = cubist_grid) 
